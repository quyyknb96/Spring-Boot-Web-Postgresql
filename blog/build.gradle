buildscript {
    ext {
        springBootVersion = '2.0.4.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.20.0')
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'
apply plugin: 'war'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

bootWar{
    baseName = 'blog'
    version =  '0.1.0'
    mainClassName = 'com.example.BlogApplication'
}

task stage(dependsOn: 'bootWar') {
}


docker {
    dependsOn build
    name "${project.group}/${bootWar.baseName}"
    files bootWar.archivePath
    buildArgs(['WAR_FILE': "${bootWar.archiveName}"])
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-tomcat', version: '2.0.4.RELEASE'
    runtime('org.postgresql:postgresql')
    compile('org.springframework.boot:spring-boot-starter-jdbc')
    compile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-jasper', version: '9.0.10'
    compile group: 'javax.servlet', name: 'jstl', version: '1.2'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.6'
    compile group: 'org.apache.httpcomponents', name: 'fluent-hc', version: '4.5.6'
    // https://mvnrepository.com/artifact/gradle.plugin.com.palantir.gradle.docker/gradle-docker
    //compile group: 'gradle.plugin.com.palantir.gradle.docker', name: 'gradle-docker', version: '0.13.0'

}
